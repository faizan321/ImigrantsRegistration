// Generated by view binder compiler. Do not edit!
package com.hisdu.meas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.hisdu.meas.R;
import com.hisdu.meas.util.MaskedEditText;
import com.hisdu.meas.util.SearchAbleSpiner.SearchableSpinner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MasterFormBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText address;

  @NonNull
  public final TextInputEditText adults;

  @NonNull
  public final ImageButton backButtonCustom;

  @NonNull
  public final Button btSubmit;

  @NonNull
  public final MaskedEditText familyHeadCnic;

  @NonNull
  public final TextInputEditText familyHeadName;

  @NonNull
  public final RecyclerView inprocessForms;

  @NonNull
  public final LinearLayout inprocessLayout;

  @NonNull
  public final TextInputEditText kids;

  @NonNull
  public final Toolbar mainToolbar;

  @NonNull
  public final SearchableSpinner migrationRoute;

  @NonNull
  public final NestedScrollView newSurveyLayout;

  @NonNull
  public final TextView noInprocess;

  @NonNull
  public final TextInputEditText noOfHousehold;

  @NonNull
  public final LinearLayout scrollView2;

  @NonNull
  public final TextView toolbarTitle;

  private MasterFormBinding(@NonNull ConstraintLayout rootView, @NonNull TextInputEditText address,
      @NonNull TextInputEditText adults, @NonNull ImageButton backButtonCustom,
      @NonNull Button btSubmit, @NonNull MaskedEditText familyHeadCnic,
      @NonNull TextInputEditText familyHeadName, @NonNull RecyclerView inprocessForms,
      @NonNull LinearLayout inprocessLayout, @NonNull TextInputEditText kids,
      @NonNull Toolbar mainToolbar, @NonNull SearchableSpinner migrationRoute,
      @NonNull NestedScrollView newSurveyLayout, @NonNull TextView noInprocess,
      @NonNull TextInputEditText noOfHousehold, @NonNull LinearLayout scrollView2,
      @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.address = address;
    this.adults = adults;
    this.backButtonCustom = backButtonCustom;
    this.btSubmit = btSubmit;
    this.familyHeadCnic = familyHeadCnic;
    this.familyHeadName = familyHeadName;
    this.inprocessForms = inprocessForms;
    this.inprocessLayout = inprocessLayout;
    this.kids = kids;
    this.mainToolbar = mainToolbar;
    this.migrationRoute = migrationRoute;
    this.newSurveyLayout = newSurveyLayout;
    this.noInprocess = noInprocess;
    this.noOfHousehold = noOfHousehold;
    this.scrollView2 = scrollView2;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MasterFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MasterFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.master_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MasterFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextInputEditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.adults;
      TextInputEditText adults = ViewBindings.findChildViewById(rootView, id);
      if (adults == null) {
        break missingId;
      }

      id = R.id.back_button_custom;
      ImageButton backButtonCustom = ViewBindings.findChildViewById(rootView, id);
      if (backButtonCustom == null) {
        break missingId;
      }

      id = R.id.bt_submit;
      Button btSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btSubmit == null) {
        break missingId;
      }

      id = R.id.family_head_cnic;
      MaskedEditText familyHeadCnic = ViewBindings.findChildViewById(rootView, id);
      if (familyHeadCnic == null) {
        break missingId;
      }

      id = R.id.family_head_name;
      TextInputEditText familyHeadName = ViewBindings.findChildViewById(rootView, id);
      if (familyHeadName == null) {
        break missingId;
      }

      id = R.id.inprocess_forms;
      RecyclerView inprocessForms = ViewBindings.findChildViewById(rootView, id);
      if (inprocessForms == null) {
        break missingId;
      }

      id = R.id.inprocess_layout;
      LinearLayout inprocessLayout = ViewBindings.findChildViewById(rootView, id);
      if (inprocessLayout == null) {
        break missingId;
      }

      id = R.id.kids;
      TextInputEditText kids = ViewBindings.findChildViewById(rootView, id);
      if (kids == null) {
        break missingId;
      }

      id = R.id.main_toolbar;
      Toolbar mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.migration_route;
      SearchableSpinner migrationRoute = ViewBindings.findChildViewById(rootView, id);
      if (migrationRoute == null) {
        break missingId;
      }

      id = R.id.new_survey_layout;
      NestedScrollView newSurveyLayout = ViewBindings.findChildViewById(rootView, id);
      if (newSurveyLayout == null) {
        break missingId;
      }

      id = R.id.no_inprocess;
      TextView noInprocess = ViewBindings.findChildViewById(rootView, id);
      if (noInprocess == null) {
        break missingId;
      }

      id = R.id.no_of_household;
      TextInputEditText noOfHousehold = ViewBindings.findChildViewById(rootView, id);
      if (noOfHousehold == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      LinearLayout scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new MasterFormBinding((ConstraintLayout) rootView, address, adults, backButtonCustom,
          btSubmit, familyHeadCnic, familyHeadName, inprocessForms, inprocessLayout, kids,
          mainToolbar, migrationRoute, newSurveyLayout, noInprocess, noOfHousehold, scrollView2,
          toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
