// Generated by view binder compiler. Do not edit!
package com.hisdu.meas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hisdu.meas.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VisitDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addStaffLayout;

  @NonNull
  public final Button cancelStaff;

  @NonNull
  public final TextView facilityType;

  @NonNull
  public final TextView healthFacilityName;

  @NonNull
  public final TextView repeat;

  @NonNull
  public final TextView shiftName;

  @NonNull
  public final TextView visitStatus;

  private VisitDetailBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout addStaffLayout,
      @NonNull Button cancelStaff, @NonNull TextView facilityType,
      @NonNull TextView healthFacilityName, @NonNull TextView repeat, @NonNull TextView shiftName,
      @NonNull TextView visitStatus) {
    this.rootView = rootView;
    this.addStaffLayout = addStaffLayout;
    this.cancelStaff = cancelStaff;
    this.facilityType = facilityType;
    this.healthFacilityName = healthFacilityName;
    this.repeat = repeat;
    this.shiftName = shiftName;
    this.visitStatus = visitStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VisitDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VisitDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.visit_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VisitDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_staff_layout;
      LinearLayout addStaffLayout = ViewBindings.findChildViewById(rootView, id);
      if (addStaffLayout == null) {
        break missingId;
      }

      id = R.id.cancel_staff;
      Button cancelStaff = ViewBindings.findChildViewById(rootView, id);
      if (cancelStaff == null) {
        break missingId;
      }

      id = R.id.facility_type;
      TextView facilityType = ViewBindings.findChildViewById(rootView, id);
      if (facilityType == null) {
        break missingId;
      }

      id = R.id.health_facility_name;
      TextView healthFacilityName = ViewBindings.findChildViewById(rootView, id);
      if (healthFacilityName == null) {
        break missingId;
      }

      id = R.id.repeat;
      TextView repeat = ViewBindings.findChildViewById(rootView, id);
      if (repeat == null) {
        break missingId;
      }

      id = R.id.shift_name;
      TextView shiftName = ViewBindings.findChildViewById(rootView, id);
      if (shiftName == null) {
        break missingId;
      }

      id = R.id.visit_status;
      TextView visitStatus = ViewBindings.findChildViewById(rootView, id);
      if (visitStatus == null) {
        break missingId;
      }

      return new VisitDetailBinding((LinearLayout) rootView, addStaffLayout, cancelStaff,
          facilityType, healthFacilityName, repeat, shiftName, visitStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
