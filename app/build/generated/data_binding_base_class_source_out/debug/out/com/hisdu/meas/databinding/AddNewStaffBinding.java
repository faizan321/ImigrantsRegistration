// Generated by view binder compiler. Do not edit!
package com.hisdu.meas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.hisdu.meas.R;
import com.hisdu.meas.util.MaskedEditText;
import com.hisdu.meas.util.SearchAbleSpiner.SearchableSpinner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddNewStaffBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addStaffLayout;

  @NonNull
  public final Button cancelStaff;

  @NonNull
  public final MaskedEditText cnic;

  @NonNull
  public final SearchableSpinner designation;

  @NonNull
  public final MaskedEditText mobile;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final SearchableSpinner presenceStatus;

  @NonNull
  public final Button saveStaff;

  private AddNewStaffBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout addStaffLayout,
      @NonNull Button cancelStaff, @NonNull MaskedEditText cnic,
      @NonNull SearchableSpinner designation, @NonNull MaskedEditText mobile,
      @NonNull TextInputEditText name, @NonNull SearchableSpinner presenceStatus,
      @NonNull Button saveStaff) {
    this.rootView = rootView;
    this.addStaffLayout = addStaffLayout;
    this.cancelStaff = cancelStaff;
    this.cnic = cnic;
    this.designation = designation;
    this.mobile = mobile;
    this.name = name;
    this.presenceStatus = presenceStatus;
    this.saveStaff = saveStaff;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddNewStaffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddNewStaffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_new_staff, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddNewStaffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_staff_layout;
      LinearLayout addStaffLayout = ViewBindings.findChildViewById(rootView, id);
      if (addStaffLayout == null) {
        break missingId;
      }

      id = R.id.cancel_staff;
      Button cancelStaff = ViewBindings.findChildViewById(rootView, id);
      if (cancelStaff == null) {
        break missingId;
      }

      id = R.id.cnic;
      MaskedEditText cnic = ViewBindings.findChildViewById(rootView, id);
      if (cnic == null) {
        break missingId;
      }

      id = R.id.designation;
      SearchableSpinner designation = ViewBindings.findChildViewById(rootView, id);
      if (designation == null) {
        break missingId;
      }

      id = R.id.mobile;
      MaskedEditText mobile = ViewBindings.findChildViewById(rootView, id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputEditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.presence_status;
      SearchableSpinner presenceStatus = ViewBindings.findChildViewById(rootView, id);
      if (presenceStatus == null) {
        break missingId;
      }

      id = R.id.save_staff;
      Button saveStaff = ViewBindings.findChildViewById(rootView, id);
      if (saveStaff == null) {
        break missingId;
      }

      return new AddNewStaffBinding((LinearLayout) rootView, addStaffLayout, cancelStaff, cnic,
          designation, mobile, name, presenceStatus, saveStaff);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
