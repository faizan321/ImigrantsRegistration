// Generated by view binder compiler. Do not edit!
package com.hisdu.meas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.hisdu.meas.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttendanceFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addNewPerson;

  @NonNull
  public final ImageButton backButtonCustom;

  @NonNull
  public final TextView facilityName;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final Toolbar mainToolbar;

  @NonNull
  public final Button next;

  @NonNull
  public final Button saveAttendance;

  @NonNull
  public final RecyclerView staffRecycler;

  @NonNull
  public final TextView statffNo;

  @NonNull
  public final TextView submitedInterview;

  @NonNull
  public final TextView toolbarTitle;

  private AttendanceFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addNewPerson, @NonNull ImageButton backButtonCustom,
      @NonNull TextView facilityName, @NonNull LinearLayout linearLayout3,
      @NonNull Toolbar mainToolbar, @NonNull Button next, @NonNull Button saveAttendance,
      @NonNull RecyclerView staffRecycler, @NonNull TextView statffNo,
      @NonNull TextView submitedInterview, @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.addNewPerson = addNewPerson;
    this.backButtonCustom = backButtonCustom;
    this.facilityName = facilityName;
    this.linearLayout3 = linearLayout3;
    this.mainToolbar = mainToolbar;
    this.next = next;
    this.saveAttendance = saveAttendance;
    this.staffRecycler = staffRecycler;
    this.statffNo = statffNo;
    this.submitedInterview = submitedInterview;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttendanceFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttendanceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attendance_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttendanceFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_new_person;
      FloatingActionButton addNewPerson = ViewBindings.findChildViewById(rootView, id);
      if (addNewPerson == null) {
        break missingId;
      }

      id = R.id.back_button_custom;
      ImageButton backButtonCustom = ViewBindings.findChildViewById(rootView, id);
      if (backButtonCustom == null) {
        break missingId;
      }

      id = R.id.facility_name;
      TextView facilityName = ViewBindings.findChildViewById(rootView, id);
      if (facilityName == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.main_toolbar;
      Toolbar mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.save_attendance;
      Button saveAttendance = ViewBindings.findChildViewById(rootView, id);
      if (saveAttendance == null) {
        break missingId;
      }

      id = R.id.staff_recycler;
      RecyclerView staffRecycler = ViewBindings.findChildViewById(rootView, id);
      if (staffRecycler == null) {
        break missingId;
      }

      id = R.id.statff_no;
      TextView statffNo = ViewBindings.findChildViewById(rootView, id);
      if (statffNo == null) {
        break missingId;
      }

      id = R.id.submited_interview;
      TextView submitedInterview = ViewBindings.findChildViewById(rootView, id);
      if (submitedInterview == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new AttendanceFragmentBinding((CoordinatorLayout) rootView, addNewPerson,
          backButtonCustom, facilityName, linearLayout3, mainToolbar, next, saveAttendance,
          staffRecycler, statffNo, submitedInterview, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
